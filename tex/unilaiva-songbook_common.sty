%% unilaiva-songbook_common.sty
%% ============================
%%
%% Preferred engine: lualatex
%%
%% This file contains the imports, style settings and macro (re)definitions
%% common to all the different versions of Unilaiva songbook. Please include
%% this in the beginning of your main .tex file just after \documentclass like
%% this:
%%
%% \usepackage{tex/unilaiva-songbook_common}
%%

\NeedsTeXFormat{LaTeX2e}
%\ProvidesPackage{unilaiva-songbook_common}



% BEGIN PACKAGE IMPORTS
% =====================

%%% Settings for package imports. These can be changed by setting them using
%%% \newcommand in the main document before loading this package.

% Set up options for the geometry package: paper size and margins.
% \ultopmargin must be at least 6.35mm (=1/4"), as that is the limit to some
% printers. \ulsidemargin and \ulbottommargin must be somewhat larger, at least
% 7.7mm, to accomodate for protrusion and still be outside the 6.35mm limit.
%
% \ulbindingoffset is the extra amount of empty left in the inner sides of pages,
% and should be set to the amount the binding takes.
%
%
% Set \ulbindingoffset to used binding system's margin (from paper edge to
% beginning of the hole) + hole's width.
%
% For the default 2:1 wire binding machine with a square hole (e.g. RM SUPU
% CW360T), the hole's width is 3,5 mm and margin is adjustable. The recommended
% margin sizes for such a machine, when using 80 gsm paper, are:
%
%   SHEET COUNT  -  WIRE DIAMETER  -  MARGIN SIZE
%       2-20     -   6 mm (1/4")   -   2 mm
%      21-40     -   8 mm (5/16")  -   2 mm
%      41-55     -  10 mm (3/8")   -   2 mm
%      56-65     -  12 mm (1/2")   -   2,5 mm
%      66-100    -  14 mm (9/16")  -   2,5 mm
%     101-115    -  16 mm (5/8")   -   2,5 mm
%     116-135    -  19 mm (3/4")   -   3,5 mm
%     136-180    -  22 mm (7/8")   -   3,5 mm
%     181-210    -  25 mm (1")     -   3,5 mm
%     211-240    -  28 mm (1"1/8)  -   4,5 mm
%     241-280    -  32 mm (1"1/4)  -   4,5 mm
%     281-310    -  35 mm (1"3/8)  -   4,5 mm
%     311-340    -  38 mm (1"1/2)  -   5 mm
%     341-410    -  45 mm (1"3/4)  -   5 mm
%     411-599    -  51 mm (2")     -   5 mm
%
% NOTE: sheet count = page count / 2. Remember to add the hole's width! Take
%       into account, if you have thicker cover pages.
%
% NOTE: If in the logs fancyhdr warns that \headheight is too small, it must
%       be adjusted here. For too small \footersep, the adjustment must be
%       done further below in the fancyhdr setup.
%
% header size is using the Golden Mean: :)
% \ultopmargin + \ulheadheight + \ulheadsep = 1.618^2 * \ultopmargin
%

\providecommand{\papersize}{a5paper}
\providecommand{\songbooktype}{chorded}
\providecommand{\ulbindingoffset}{8mm} % 8 mm for 2:1 wire binding, 32 mm wires
\providecommand{\ulsidemargin}{9mm}
\providecommand{\ulbottommargin}{9mm}
\providecommand{\ultopmargin}{6.35mm}
\providecommand{\ulheadheight}{4.33mm}
\providecommand{\ulheadsep}{5.943mm}


% Actual imports

\usepackage[]{polyglossia} % for multiple language support
\usepackage{fontspec} % font loading & handling
\usepackage{newunicodechar} % for defining special behaviour for specific characters
% Use 'microtype' package for better appearance (especially for non-song chapters):
%   final - enable microtype; use "draft" to disable
%   protrusion=true, activate protrusion
%   expansion=false, deactivate expansion, doesn't work with lua(la)tex
%   tracking=true, kerning=true - activate these techniques
%   spacing=false - no interword spacing for compatibility with ragged2e,
%                   \nonfrenchspacing etc.
%   factor=1100 - add 10% to the protrusion amount (default is 1000)
%   stretch=10, shrink=10 - reduce stretchability/shrinkability (default is 20/20)
%   Affected fonts are defined later with \DefineMicrotypeSetDefault
\usepackage[final,
            protrusion=true,
            expansion=false,
            tracking=true,
            kerning=false,
            spacing=false,
            factor=1100,
            stretch=10,
            shrink=10]{microtype}
% Font weight defaults for Noto are regular and bold; here they are made heavier.
% Do not use font scaling as it messes with line spacing in some cases.
%\usepackage[medium,extrabold]{noto}
%\usepackage[T1]{fontenc}
% hyperref is used for URL links and by 'songs' package for index links in PDF.
% Use option 'colorlinks' to colorize the links always, for both print and
% digital viewing. It is possible to use colors only for digital viewing and
% black for printing, by using 'ocgcolorlinks' option, which requires PDF
% version 1.5, instead. That creates different layers for view and print,
% which creates nicer result for black-and-white prints, but some printing
% software might ignore both layers thus printing nothing for links -- so we
% are not using it for now. The actual colors are defined further below.
\usepackage[bookmarks,
           unicode,
           colorlinks]{hyperref} % used by 'songs' package for index links in PDF
% For info on page geometry, see comments above where the \providecommands are set
\usepackage[%showframe, % uncomment showframe for debugging margins etc
            paper=\papersize,
            bindingoffset=\ulbindingoffset,
            inner=\ulsidemargin,
            outer=\ulsidemargin,
            bmargin=\ulbottommargin,
            tmargin=\ultopmargin,
            headheight=\ulheadheight,
            headsep=\ulheadsep,
            nofoot,
            includehead,
            includefoot]{geometry} % page size + margins
% xcolor package for using colors in various elements; dvipsnames option imports
% some CMYK color names
\usepackage[dvipsnames]{xcolor}%
\usepackage{graphicx} % for importing images
\usepackage{pdfpages} % for cover page
\usepackage{array} % used at least in Technical Information chapter
% Disable all warnings issued by latex starting with "You have requested package..." to allow
% warningless loading of packages from subdirectories without setting environment variables
% (can be omitted, but warnings will appear):
\usepackage{silence}\WarningFilter{latex}{You have requested package}
\usepackage{ragged2e} % used to force text justification in 'explanation' env
\usepackage{enumitem} % used to modify 'description' env within 'explanation' env
\usepackage{xstring} % used for string manipulation (at least in GR macros)
\usepackage{amssymb} % for some math symbols
\usepackage{fancyhdr} % for customizing headers
\usepackage[bigger]{musicography} % musical symbols (at least \musSegno is used)
% environ's \NewEnviron is used instead of \newenvironment in in-song blocks,
% to enable hiding of them
\usepackage{environ}%
% verbatim's \comment is used in hiding translation environment, as it can't use
% environ package's \NewEnviron
\usepackage{verbatim}%
\usepackage{keyval}% Used in \audio, https://ctan.org/pkg/keyval
\usepackage{xparse}% Used in \mainchapter

% The most important 'songs' package, use the version in the project tree.
% The \songbooktype macro contains by default 'chorded', but it can be defined
% to be 'lyric' before including this file to produce lyrics-only songbooks.
% In such a case it would be a good idea to setup the book with \show* macros
% after including this file, too.
\usepackage[\songbooktype]{tex/ext_packages/songs/songs}

% END PACKAGE IMPORTS


% BEGIN GENERIC UTILITY MACROS

% Testing if the argument has no width when put in a box i.e. it is empty.
% If so, the first token will be expanded, otherwise the second.
% Example:
%   \ifnowidth{\somemacro}{%
%     EMPTY
%   }{%
%     NOT EMPTY
%   }
\newcommand{\ifnowidth}[1]{%
  \begingroup%
  \sbox\z@{#1}%
  \expandafter\endgroup%
  \ifdim\wd\z@=\z@%
    \expandafter\@firstoftwo%
  \else%
    \expandafter\@secondoftwo%
  \fi%
}

% Gets a roman uppercase number from the number given as parameter
\newcommand{\romanupnum}[1]{%
  \expandafter\@slowromancap\romannumeral #1@%
}

% Set a length register #1 with value #2 in the global scope.
\gdef\gsetlength#1#2{%
  \begingroup
    \setlength\tmp@{#2} % Local assignment to a temporary register
    \global#1=\tmp@     % Global assignement to #1
                        % \relax not needed because of the following \endgroup
  \endgroup             % \tmp@ is restored
}

% This rewrite ensures that empty pages created with \cleardoublepage, like the
% empty pages at the end of chapters, do not have headers.
\renewcommand*{\cleardoublepage}{%
  \clearpage%
  \if@twoside%
    \ifodd\c@page%
    \else%
      \hbox{}%
      \thispagestyle{empty}%
      \newpage%
      \if@twocolumn%
        \hbox{}\newpage%
      \fi%
    \fi%
  \fi%
}

% END GENERIC UTILITY MACROS


% *****************************************************************************


% BEGIN STYLE & OTHER SETTINGS
% ============================

% BEGIN Toggles

% Introduce toggles for some global features and set their defaults. If you
% want a specific feature enabled or disabled, you must set it's toggle to
% true or false in the main document preamble (after including this package).
% Example: \showtagsfalse would disable showing tags in song preludes, and
%          \showtagstrue would enable showing them.

% Toggle for showing extra info in song preludes. To set it for a song,
% define it as \beginsong parameter: "\beginsong[ex={this song is good}]"
\newif\ifshowex\showextrue

% Toggle for showing extra info in song preludes. To set it for a song,
% define it as \beginsong parameter: "\beginsong[off={My Muse}]"
\newif\ifshowoff\showofftrue

% Toggle for showing key info in song preludes. To set it for a song,
% define it as \beginsong parameter: "\beginsong[key={Am}]". Make sure that
% it is correct, that the key set here corresponds to the actual key displayed
% in the final document (after possible transpose).
\newif\ifshowkey\showkeytrue

% Toggle for showing good keys in song preludes. To set it/them for a song,
% define it as \beginsong parameter: "\beginsong[gk={Am, Gm--Bm}]". The first
% is the preferred one, and then comes the range of keys suitable for singing
% in such a way that the melody falls within (inlcuding) a G note in the low
% end, and a B note of the next octave in the high end. If such a range is
% impossible, put the keys in the range in parenthesis.
\newif\ifshowgoodkeys\showgoodkeystrue

% Toggle for showing phase info in song preludes. To set it for a song,
% define it as \beginsong parameter: "\beginsong[ph={I, II}]"
\newif\ifshowph\showphtrue

% Toggle for showing phase info in the TOC:
\newif\ifshowphintoc\showphintoctrue

% Toggle for showing tags in song preludes. To set them for a song,
% define them as \beginsong parameter: "\beginsong[tags={love, light}]"
% Note the mandatory '1' (that will not be shown) and that the tags must be
% defined in file 'tags.can' to use them.
\newif\ifshowtags\showtagstrue

% Toggle for showing melody notes in songs. To set them for a song, use the
% \note??? macros inside chord definitions. To set them temporarily on or
% off within a (part of a) song, use macros \notesoff and \noteson.
\newif\ifshownotes\shownotestrue

% Toggle for showing beat marks in songs. To set them for a song, use the
% \bm??? macros inside chord definitions. To set them temporarily on or
% off within a (part of a) song, use macros \beatsoff and \beatson.
\newif\ifshowbeats\showbeatstrue

% Toggle for showing authors in the song preludes. Personal opinion: the
% authors should definitely be shown in all cases. This option is here for
% the sake of completeness. :)
\newif\ifshowauth\showauthtrue

% Toggle for showing verse numbers. Suggestion: keep this as false!
\newif\ifshowversenumbers\showversenumbersfalse

% Toggle for showing Lilypond music scores
\newif\ifshowlilypond\showlilypondtrue

% Toggle for showing explanations
\newif\ifshowexplanation\showexplanationtrue

% Toggle for showing translations
\newif\ifshowtranslation\showtranslationtrue

% Toggle for showing feelers
\newif\ifshowfeeler\showfeelertrue

% Toggle showing of alternate chord sets
\newif\ifshowaltchords\showaltchordstrue

% Toggle appending the (optional) chapter image or symbol appended to the
% chapter name wherever it shows up, e.g. in TOC and page headers. The image is
% never shown in PDF index though, as only characters are supported there.
\newif\ifshowimageinchaptername\showimageinchapternametrue

% Toggle showing the (optional) chapter image or symbol on the front page of
% a chapter.
\newif\ifshowimageonchapterfrontpage\showimageonchapterfrontpagetrue

% Toggle uppercasing the long chapter title shown on chapter front pages
\newif\ifupcaselongchaptertitle\upcaselongchaptertitlefalse

% Toggle uppercasing the short chapter title shown in TOC and page headers
\newif\ifupcaseshortchaptertitle\upcaseshortchaptertitletrue

% Toggle uppercasing the book name in page headers
\newif\ifupcasesectiontitleinheader\upcasesectiontitleinheaderfalse

% Toggle uppercasing the book name in page headers
\newif\ifupcasebooktitleinheader\upcasebooktitleinheadertrue

% END Toggles

% BEGIN Book titles etc

% Set defaults for book titles if they're not yet defined. One should define
% them in the main file before including this package. Only \mainbooktitle
% is mandatory. The supported macros are:
%   \mainbooktitle
%   \subbooktitle
%   \subsubbooktitle
%   \thisbooktitle
%   \bookmotto
%   \bookbytext
%   \bookversionpretext
%   \bookwebsitelink
%   \bookwebsitelinkqrimage (this is image filename in content/img without path)
%   \bookcompiledbytext
%   \imprintpagefootnote
% All of them are optional, and for some there are defaults defined below.
\providecommand\mainbooktitle{Not named songbook} % the main title
% The book title to display on top of each verso page (if doesn't exist, it is
% constructed here from \mainbooktitle and optional \subbooktitle):
\providecommand{\thisbooktitle}{% main title (+ subtitle, if defined)
  \mainbooktitle\ifdefined\subbooktitle{: \subbooktitle}\fi%
}
\providecommand{\bookbytext}{By:\par\vspace{0.618034ex}\textbf{\Large humankind}}%
\providecommand{\bookversionpretext}{Version:}
\providecommand{\songbookversion}{%
  \the\year-\ifnum\month<10 0\fi\the\month-\ifnum\day<10 0\fi\the\day%
}
\providecommand{\lyricsonlytext}{lyrics only}

% Set defaults for PDF metadata, if they are not defined. One should define
% them in the main file before including this package.
\providecommand{\pdfauthor}{}
\providecommand{\pdfsubject}{Songbook}
\providecommand{\pdfkeywords}{}

% END Book titles etc


% Color profile settings. Use sRGB and create OutputIntent. We won't be able to
% use CMYK for the whole document anyway without converting the images. For the
% same reason PDF/A is not possible. To use CMYK, some other things need to be
% changed too, for example use cmyk option for xcolor.
% Note that sRGB.icc file should be contained in the TeX installation -- if not,
% it must be put within the project source and include the relative path to it
% below. Also, the compile script must be modified to copy the file to the
% temporary compile directory.
%
% To afterwards convert the file to CMYK, the following Ghostscript invocation
% might do the trick:
% gs \
%    -o output-file-cmyk.pdf \
%    -sDEVICE=pdfwrite \
%    -sProcessColorModel=DeviceCMYK \
%    -sColorConversionStrategy=CMYK \
%    -sColorConversionStrategyForImages=CMYK \
%    -dEncodeColorImages=false \
%    source-file.pdf
%
% See: https://tex.stackexchange.com/questions/61217/latex-color-and-icc-color-profiles
% See: https://tex.stackexchange.com/questions/227429/pdf-a-with-cmyk-how/536060#536060
% See: https://stackoverflow.com/questions/6241282/converting-pdf-to-cmyk-with-identify-recognizing-cmyk
\immediate\pdfobj stream attr{/N 3} file{sRGB.icc}
\pdfcatalog{%
  /OutputIntents [
    <<
      /Type /OutputIntent
      /S /GTS_PDFA1
      /DestOutputProfile \the\pdflastobj\space 0 R
      /OutputConditionIdentifier (sRGB)
      /Info (sRGB)
    >>
    <<
      /Type /OutputIntent
      /S /GTS_PDFX
      /DestOutputProfile \the\pdflastobj\space 0 R
      /OutputConditionIdentifier (sRGB)
      /Info (sRGB)
    >>
  ]
}


% microtype: enable some microtype features for more fonts than in the defaults:
\DeclareMicrotypeSet{mosttext}{encoding={OT1,T1,T2A,LY1,OT4,QX,T5,TS1,EU1,EU2,TU},
                               size={scriptsize-Large}}
\DeclareMicrotypeSetDefault[protrusion,spacing]{mosttext}

% fontspec: setup fonts
\setmainfont[Ligatures=TeX,
             UprightFont=*-Medium,
             BoldFont=*-ExtraBold,
             ItalicFont = *-MediumItalic,
             BoldItalicFont = *-ExtraBoldItalic,
             FontFace = {sl}{\shapedefault}{*-Medium},
             FontFace = {sl}{it}{*-MediumItalic},
             FontFace = {b}{\shapedefault}{*-ExtraBold},
             FontFace = {b}{it}{*-ExtraBoldItalic}]
            {Noto Serif}
\setsansfont[Ligatures=TeX,
             UprightFont=*-Medium,
             BoldFont=*-ExtraBold,
             ItalicFont = *-MediumItalic,
             BoldItalicFont = *-ExtraBoldItalic,
             FontFace = {sl}{\shapedefault}{*-Medium},
             FontFace = {sl}{it}{*-MediumItalic},
             FontFace = {b}{\shapedefault}{*-ExtraBold},
             FontFace = {b}{it}{*-ExtraBoldItalic}]
            {Noto Sans}
\setmonofont[Ligatures=TeX,
             Scale=MatchLowercase,
             UprightFont=*-Medium,
             BoldFont=*-ExtraBold,
             FontFace = {sl}{\shapedefault}{*-Medium},
             FontFace = {b}{\shapedefault}{*-ExtraBold}]
            {Noto Sans Mono} % italic not available for mono
% Noto Symbols: https://fonts.google.com/noto/specimen/Noto+Sans+Symbols/glyphs
\newfontfamily{\symbolfont}[Ligatures=TeX,
                            UprightFont=*-Medium,
                            BoldFont=*-ExtraBold,
                            ItalicFont=*-Medium,
                            BoldItalicFont=*-ExtraBold,
                            FontFace = {sl}{\shapedefault}{*-Medium},
                            FontFace = {b}{\shapedefault}{*-ExtraBold}]
                           {Noto Sans Symbols} % italic not available
% Noto Symbols 2: https://fonts.google.com/noto/specimen/Noto+Sans+Symbols+2/glyphs
\newfontfamily{\symboliifont}[Ligatures=TeX,
                              UprightFont=*-Regular,
                              BoldFont=*-Regular,
                              ItalicFont=*-Regular,
                              BoldItalicFont=*-Regular]
                             {Noto Sans Symbols2} % weights and italic not available
\newfontfamily{\persianfont}[Script=Arabic,
                             Ligatures=TeX,
                             UprightFont=*-Medium,
                             BoldFont=*-ExtraBold,
                             ItalicFont=*-Medium,
                             BoldItalicFont=*-ExtraBold,
                             FontFace = {sl}{\shapedefault}{*-Medium},
                             FontFace = {b}{\shapedefault}{*-ExtraBold}]
                            {Noto Sans Arabic} % italic not available
\newfontfamily{\persianfontsf}[Script=Arabic,
                               Ligatures=TeX,
                               UprightFont=*-Medium,
                               BoldFont=*-ExtraBold,
                               ItalicFont=*-Medium,
                               BoldItalicFont=*-ExtraBold,
                               FontFace = {sl}{\shapedefault}{*-Medium},
                               FontFace = {b}{\shapedefault}{*-ExtraBold}]
                              {Noto Sans Arabic} % italic not available

% Sets sans-serif as the default font family everywhere:
\renewcommand{\familydefault}{\sfdefault}

% polyglossia: language settings
\setmainlanguage{english}
\setotherlanguage{finnish}
% Picks automatically up the \persianfont and \persianfontsf defined above.
% Use the persian language by putting it inbetween of \begin{persian} and
% \end{persian}.
\setotherlanguage[numerals=maghrib]{persian}

% newunicodechar:
\newunicodechar{❶}{{\symbolfont ❶}}
\newunicodechar{❷}{{\symbolfont ❷}}
\newunicodechar{❸}{{\symbolfont ❸}}
\newunicodechar{❹}{{\symbolfont ❹}}

% Allow further emergency stretching to fix some "overfull hbox" situations.
% See: https://www.tex.ac.uk/FAQ-overfull.html
\setlength{\emergencystretch}{3em}

\graphicspath{ {./content/img/} } % graphicx: set path to find images from

% color: Color definitions:
\definecolor{chordcolor}{rgb}{0.20,0,0.22} % chords
\definecolor{altchordcolor_a}{rgb}{0.10,0.4,0.10} % green, set 1 (default)
\definecolor{altchordcolor_b}{rgb}{0.35,0.22,0.06} % brown, set 2
\definecolor{altchordcolor_c}{rgb}{0.17,0.23,0} % dirty green, set 3
\definecolor{altchordcolor_d}{rgb}{0.13,0,0.42} % bluish, set 4
\definecolor{altchordcolor_e}{rgb}{0.09,0.33,0.34} % cyan, set 5
\definecolor{altchordcolor_f}{rgb}{0.36,0.15,0.23} % redish, set 6
\definecolor{mbarcolor}{rgb}{0.36,0,0.48} % measure bar
% encircled melody notes, the note name inside:
\definecolor{melodynotecolor}{rgb}{0.0,0.1536,0.1824}
% encircled melody notes, the circle:
\definecolor{melodynotecirclecolor}{rgb}{0.0,0.3072,0.3648}
% color for repetition signs (\lrep \rrep and \rep):
\definecolor{repetitionsigncolor}{rgb}{0.1,0.1,0.3}
\definecolor{songnumbgcolor}{rgb}{1,1,1} % song number background
\definecolor{notebgcolor}{rgb}{0.9,0.9,0.9} % textnote background
\definecolor{idxbgcolor}{rgb}{1,1,1} % index alphabet background
\definecolor{internallinkcolor}{rgb}{0,0,0.3} % internal links
\definecolor{urllinkcolor}{rgb}{0.3,0,0.3} % external links
\definecolor{linkboxcolor}{rgb}{0.5,0.9,0.6} % boxed links (view), not used now

% hyperref: setup
\hypersetup{linkbordercolor=linkboxcolor,%
            linkcolor=internallinkcolor,%
            urlcolor=urllinkcolor,%
            unicode=true,%
            pdfpagelayout=TwoPageRight, % display two pages side-by-side, odd on the right
            pdfprintscaling=None, %
            pdftitle={\thisbooktitle},%
            pdfauthor={\pdfauthor},%
            pdfsubject={\pdfsubject},%
            pdfkeywords={\pdfkeywords},%
            pdfinfo={DocumentVersion={\songbookversion}}% this is a custom attr
           }

\renewcommand{\snumbgcolor}{songnumbgcolor} % songs: set song number background color in prelude
\renewcommand{\notebgcolor}{notebgcolor} % songs: set \musicnote and \textnote background color
\renewcommand{\idxbgcolor}{idxbgcolor} % songs: set index alphabet section background color

\songcolumns{1} % songs: number of columns per page in songs environment
\songpos{3} % songs: song same column-page-doublepage positioning aggressiveness 0-3
\newcommand{\defaultlyricfont}{\sffamily\large} % set the lyrics font style (used below)
\renewcommand{\lyricfont}{\defaultlyricfont} % songs: modify lyrics font style
% songs: modify chord font style (add color and make smaller):
\renewcommand{\printchord}[1]{\sffamily\bfseries\small\color{chordcolor}#1}
% songs: modify meter class font style (add color):
\renewcommand{\meterfont}{\color{chordcolor}\scriptsize\sffamily\upshape}
\renewcommand{\notefont}{\small} % songs: modify \textnote and \musicnote font (make smaller)
\renewcommand{\idxtitlefont}{\sffamily} % songs: font used for titles in indices
\renewcommand{\idxlyricfont}{\sffamily\slshape} % songs: font for alternate (lyric) titles in indices
\renewcommand{\idxscripfont}{\sffamily\small\slshape} % songs: font used for tag (scripture) index
% songs: use same text color for music notes as for chords:
\renewcommand\musicnote[1]{\ifchorded\textnote{\color{chordcolor}#1}\fi}%
% songs: use real sharp and flat symbols from Noto Symbol font:
\renewcommand{\sharpsymbol}{\textsuperscript{{\symbolfont♯}}}%
\renewcommand{\flatsymbol}{\raise.5ex\hbox{\SB@flatsize{{\symbolfont♭}}}}%
% songs: adjust baseline distance within lyric lines to not stretch
\baselineadj=0pt plus 0pt minus 0pt
% songs: Verse separation +/-; +/- 0 would be best, but in some cases a song can
% only fitted on a page with smaller separation.
\versesep=14pt plus 0pt minus 2.7pt% was: 2.9pt%
% songs: change distance of chords to lyrics
\renewcommand{\clineparams}{%
  \baselineskip=10.6pt%
  \lineskiplimit=1pt%
  \lineskip=1pt%
}
% songs: set width of the vertical repetition line used in choruses etc (default: 1pt):
\setlength{\cbarwidth}{1.2pt}

%\addto\captionsfinnish{\renewcommand\chaptername{}} % sets chapter name prefix to nothing when babel: finnish
\addto\captionsenglish{\renewcommand\chaptername{}} % sets chapter name prefix to nothing when babel: english
\addto\captionsenglish{\renewcommand\appendixname{}} % sets appendix name prefix to nothing when babel: english

% BEGIN Setup headers using fancyhdr (similar to default "book" style)
%
% Note that some pages (the first pages of TOC and chapters etc) automatically
% use the style 'plain'. If needed, this style can also be modified with
% \fancypagestyle{plain}
%

% The style for book, chapter and section titles in page headers
\providecommand{\headertitlestyle}{%
  \rmfamily\small\itshape%
}

% The style for page numbers in page headers
\providecommand{\pagenumberstyle}{%
  \rmfamily\small%
}

% This gets rid of implicit uppercasing, as it creates problems with images
% in the chapter titles. Upcasing is now done differently and controlled with
% \upcase...true/false settings. Note that these can't be inside style blocks.
\renewcommand{\chaptermark}[1]{\markboth{#1}{}}
\renewcommand{\sectionmark}[1]{\markright{#1}}

% Returns the book's title formatted for headers. Used in fancyhdr style below.
\newcommand{\headerbooktitle}{%
  {%
    \headertitlestyle%
    \ifupcasebooktitleinheader%
      \MakeUppercase{\thisbooktitle}%
    \else%
      \thisbooktitle%
    \fi%
  }%
}

% Returns the sections's title formatted for headers. Used in fancyhdr style
% below.
\newcommand{\headersectiontitle}{%
  {%
    \headertitlestyle%
    \ifupcasesectiontitleinheader%
      % for pdf's index, \MakeUppercase can't be used.
      \texorpdfstring{\MakeUppercase{\rightmark}}{\rightmark}%
    \else%
      \rightmark%
    \fi%
  }
}

% Returns the chapter's title formatted for headers. Used in fancyhdr style
% below.
\newcommand{\headerchaptertitle}{%
  % Note that chapter title's optional upcasing is done elsewhere in the
  % definition of \mainchapter, because it cannot be done here due to possible
  % chapter images).
  {\headertitlestyle{\leftmark}}%
}

\newcommand{\headerchapterandsectiontitles}{%
  \rmfamily\small%
  \headerchaptertitle%
  \ifnowidth{\rightmark}{}{%
    \hspace{1em}---\hspace{1em}\headersectiontitle%
  }%
}

% Setup main header style
\fancypagestyle{unilaiva}[fancy]{%
  % NOTE: If fancydr warns that \footskip is too small, adjust the value here,
  % but for too small \headsep, set it instead when loading geometry package
  % above.
  \setlength{\footskip}{3.60004pt} % this value comes from fancyhdr warning
  \renewcommand{\headrulewidth}{0pt}
  \renewcommand{\footrulewidth}{0pt}
  \fancyhf{}
  \fancyhead[LE,RO]{\pagenumberstyle\thepage} % page nr
  \fancyhead[CE]{\headerbooktitle}%    % even center: book title
  \fancyhead[CO]{\headerchapterandsectiontitles} % chapter title --- section title
}

% Setup style for TOC
\fancypagestyle{unilaivatoc}[unilaiva]{%
  \fancyhead[LO]{} % odd left: nothing
  \fancyhead[CO]{\rmfamily\small\itshape{\leftmark}} % odd center: chapter title: "CONTENTS"
}

\pagestyle{unilaiva} % set the default page style

% END Setup headers using fancyhdr


% BEGIN Setup column break penalties

% Forces a column break
\newcommand{\forcebrk}{%
  \brkpenalty=-10000\brk%
}

% Suggest a column brake if chords are off (lyrics-only book)
\newcommand\brkifchordsoff{%
  \ifchorded\else\brk\fi%
}

% songs: Set penalties for column (page) breaks (<=-10000: break is forced)
% NOTE: Be careful changing these. At least check that the page count of the
%       final PDF is the same as before the change.
\spenalty=0     % between songs (songs default: 100, here 0)
\vvpenalty=200  % between verse and verse (songs default: 200, here 200)
\vcpenalty=200  % between verse and chorus (songs default: 200, here 200)
\ccpenalty=200  % between chorus and chorus (songs default: 200, here 200)
\cvpenalty=200  % between chorus and verse (songs default: 200, here 200)
\brkpenalty=50  % for \brk (songs default: 200, here 50)
\interlinepenalty=1000 % between in-verse lines (songs default: 1000, here 1000)
\newcount\gluepenalty%
\gluepenalty=950 % between verses glued together with \glueverses (default here: 950)
\newcount\blockpenalty%
\blockpenalty=0 % between (and before the song's first) in-song blocks (default here: 0)
\newcount\translationvvpenalty%
\translationvvpenalty=900 % between translation verses (when \nextverse is called)

% END Setup column break penalties


% END STYLE & OTHER SETTINGS


% *****************************************************************************


% BEGIN DEFINITIONS AND REWRITES
% ==============================

\makeatletter% To allow rewrites of @-containing macros

% This command creates "the imprint page", usually the "second page", the odd
% verso page right after the cover. The information on the page is constructed
% from the macros described in the "Book titles etc" section above.
\newcommand{\imprintpage}{
  { % must be contained within a block for the settings to not bleed
    \thispagestyle{empty}
    \topskip0pt
    \normalsize
    \vspace*{11.3ex} % align with "Contents" heading on the next page; BAD for any changes
    \begin{center}
      {\Huge \mainbooktitle}
      \ifdefined\bookmotto% \bookmotto exists
        \par\textit{\normalsize\bookmotto}
      \fi
      \ifdefined\subbooktitle% \subbooktitle exists
        \par\vspace{2ex}
        {\Large \textbf{\subbooktitle}}
        \ifdefined\subsubbooktitle% \subsubbooktitle exists
          \par\vspace{0.618034ex}%
          {\normalsize \subsubbooktitle}
        \fi
      \fi
      \par\vspace*{\fill}
      \ifdefined\bookbytext% \bookbytext exists
        {\large \bookbytext}
        \par\vspace{2ex}
      \fi
      {\large \bookversionpretext}
      \par\vspace{0.618034ex}
      {\Large%
        %vvvv-mm-dd % Use hardcoded date date for tagged printout releases
        \songbookversion% current date, the default
        \ifchorded\else{\par\large\emph{\lyricsonlytext}}\fi% if non-chorded version, mention it here
      }
      \par\vspace*{\fill}
      \ifdefined\bookwebsitelinkqrimage% \bookwebsitelink exists
        \imagel[3]{\bookwebsitelinkqrimage} % is already centered, so 'l' version ok
        \par
      \fi
      \ifdefined\bookwebsitelink% \bookwebsitelink exists
        {\small\url{\bookwebsitelink}}
      \fi
      % Add vspace once, if either \bookwebsitelink or \bookwebsitelinkqrimage,
      % or both, exist
      \ifdefined\bookwebsitelinkqrimage%
        \par\vspace*{\fill}
      \else\ifdefined\bookwebsitelink%
        \par\vspace*{\fill}
      \fi\fi
      \ifdefined\bookcompiledbytext% \bookcompiledbytext exists
        {\footnotesize\bookcompiledbytext}
        \par\vspace{4ex}
      \fi
      \ifdefined\imprintpagefootnote%
        {\scriptsize\imprintpagefootnote}%
      \fi
    \end{center}
    \vspace{-1.85ex}% workaround to align page bottom with other pages
  }
}

% Creates the Table Of Contents here. Use this instead of \tableofcontents macro
\newcommand{\toc}{
  \pagestyle{unilaivatoc}% use alternate header style for TOC
  % to have totally flat right edge of the dots in TOC (microtype package):
  \microtypesetup{protrusion=false} % To have a flat right side in TOC
  \tableofcontents % The TOC
  \microtypesetup{protrusion=true}% back to default (microtype package)
  % Remove the overlapping page number in the bottom of the first TOC page:
  \addtocontents{toc}{\protect\thispagestyle{empty}}
  % Adds text "Page" on top of the TOC:
  \addtocontents{toc}{~\hfill\textbf{Page}\par}
  \newpage\pagestyle{unilaiva}% return to the default header style
}

% Returns the chapter symbol (six-petalled star) as a text symbol. Renew to
% change.
\newcommand\chaptersymbol{%
  {\symboliifont 🟌}%
}

% Outputs the chapter symbol defined above in color; the mandatory parameter
% is the color name.
\newcommand\coloredchaptersymbol[1]{%
  {\textcolor{#1}\chaptersymbol}%
}

% This is used to define the main chapters of the book. Indices, instead, use
% \songchapter (internally).
%
% Usage:
%
%   \mainchapter*[short title]{long title}*[symbol info]
%
%   1st star:    This optional star signifies an unnumbered chapter; the star,
%                if present, is passed to \chapter macro.
%   short title: This is used in TOC and page headers -- if omitted, the long
%                title is used.
%   long title:  The long title, used on chapter front pages (and elsewhere,
%                if short title is not given). This is the only mandatory
%                parameter.
%   2nd star:    If present, means that 'symbol info' parameter contains an
%                image file name, otherwise 'symbol info' contains a color name
%                to color the chapter symbol.
%   symbol info: if 2nd star is given, this ought to contain an image file name,
%                otherwise a color (name) to color the chapter symbol. If this
%                parameter is omitted, no chapter image or symbol is used.
%
% NOTE: If optional parameters are omitted, also the empty bracket pair must
%       be left out! So no "[]".
%
% Examples:
%
%   \mainchapter{Good songs}
%   \mainchapter[Nice chapter]{Very very very very nice chapter}[red]
%   \mainchapter{Bad songs}*[bad_songs_image.png]
%
% Note: \NewDocumentCommand, IfValueTF etc. come from xparse package, and allow
%       nice handling of parameters.
\NewDocumentCommand{\mainchapter}{s o m s o}{% star, [short title], {long title}, star(means image) [symbol color / image name]
  \IfValueTF{#2}{% short title is given
    \def\shorttitletext{#2}%
  }{ % short title is not given, use the long one as the short title
    \def\shorttitletext{#3}%
  }%
  \def\longtitletext{#3}%
  \IfValueTF{#5}{ % #5 is given, there is image name or symbol color
    \IfBooleanTF{#4}{% star is given, #5 is image name
      \def\smallchapterimage{%
        \includegraphics[height=1em,keepaspectratio=true]{#5}%
      }%
      \def\largechapterimage{%
        \vspace{-1em}%
        \imagecc[1]{#5}%
      }%
    }{% star not given: #5 is color for \chaptersymbol
      \def\smallchapterimage{\coloredchaptersymbol{#5}}%
      \def\largechapterimage{\vfill\vspace{-1em}\begin{center}{%
        \fontsize{108pt}{128pt}\coloredchaptersymbol{#5}%
      }\end{center}\vfill}%
    }
  }{% there is no image name nor symbol color given
    \let\smallchapterimage\undefined%
    \let\largechapterimage\undefined%
  }
  \def\shorttitlefull{%
    % Include the image in the chapter title string, if the image is given and
    % the feature is turned on.
    \texorpdfstring{% pdf indexes can't contain images or \MakeUppercase
      \ifupcaseshortchaptertitle\MakeUppercase{\shorttitletext}\else\shorttitletext\fi%
      \ifshowimageinchaptername\ifdefined\smallchapterimage\hspace{1em}\smallchapterimage\fi\fi%
    }{\shorttitletext}%
  }
  \def\longtitlefull{%
    \ifupcaselongchaptertitle\MakeUppercase{\longtitletext}\else\longtitletext\fi%
  }
  \IfBooleanTF{#1}{% \mainchapter with star, call \chapter with star also
    \chapter*[\shorttitlefull]{\longtitlefull}%
  }{% \mainchapter without star, call \chapter without it also
    \chapter[\shorttitlefull]{\longtitlefull}%
  }
  % The rest setups the chapter's front page
  \thispagestyle{empty}% to omit the page number in the bottom of the page
  \ifshowimageonchapterfrontpage\ifdefined\largechapterimage\vspace{-1em}\largechapterimage\fi\fi%
  \clearpage%
}

% Adds vertical space, if not currently in a verse nor a chorus. The amount
% of space is given as a length parameter.  Must be called only in vertical
% mode, as this uses \addvspace command.
\newcommand{\vspaceifnotinverse}[1]{%
  \ifSB@inverse{}\else{% not in verse
    \ifSB@inchorus{}\else{% nor in chorus
      \addvspace{#1}%
    }\fi%
  }\fi%
}

\newcommand{\@gotochorusvspace}{.618034\baselineskip}

% These commands will display some text followed by three dots, and aligned to
% the right of the page. The idea is to use it as a signal for the reader to
% go to a different part of the song, for example the chorus. You can use it
% on the last line of a verse or between verses (in such a case it will be put
% on its own line). The only parameter is to be the first words of the lyrics
% to go to.
%
% There are four versions of the command, each taking different number of
% parameters. It is recommended to use the one-parameter version \goto
% and if needed, use it on consecutive lines to signal consecutive jumps.
% But, if for space reasons it is deemed necessary, one can use the other
% versions to squeeze more than one successive jump on one line.
\newcommand{\goto}[1]{%
  %\vspaceifnotinverse{\@gotochorusvspace}%
  \hfill\@gtctext{#1}\par%
}%
\newcommand{\gotoii}[2]{%
  \vspaceifnotinverse{\@gotochorusvspace}%
  \hfill\@gtctext{#1} \@gtctext{#2}\par%
}
\newcommand{\gotoiii}[3]{%
  \vspaceifnotinverse{\@gotochorusvspace}%
  \hfill\@gtctext{#1} \@gtctext{#2} \@gtctext{#3}\par%
}
\newcommand{\gotoiv}[4]{%
  \vspaceifnotinverse{\@gotochorusvspace}%
  \hfill\@gtctext{#1} \@gtctext{#2} \@gtctext{#3} \@gtctext{#4}\par%
}
% Used by \goto?? commands:
\newcommand{\@gtctext}[1]{{\normalsize\textit{\bfseries{{\symboliifont➞ }#1\ldots}}}}

\newcounter{@indentrepeat}% used by \ind

% This command will make a small horizontal space. Use this in the beginning
% of each line in a verse you want to make distinct from other verses, for
% example for a chorus or a verse with a different melody or chord set. The
% optional parameter specifies the amount of space ie. indent depth; the
% default is 1.
\newcommand\ind[1][1]{%
  \setcounter{@indentrepeat}{0}
  \loop \ifnum\value{@indentrepeat} < #1%
    \hspace{1em}%
    \stepcounter{@indentrepeat}%
  \repeat%
}

% Text for the next song mark. Can be set before including this file.
\providecommand{\textnextsong}{next song}

% This command puts an arrow with a text "next song" above it to the end of
% the current line. It is meant to be used on the last line of the last
% verse, to suggest that one can continue playing the next song straight.
\newcommand{\tonextsongmark}[0]{
  \hfill%
  \makebox[0pt][l]{\raisebox{1ex}{%
    \tiny\textit{\textnextsong}%
  }}%
  $\Longrightarrow$
}


% BEGIN GLUESTANZAS

% Toggled by \glueverses and \SB@stanzabreak
\newif\if@stanzasglued\@stanzasgluedfalse

% This rewrite supports \glueverses. If \glueverses is declared before starting
% a new verse/chorus, vertical space between verses is not inserted, and penalty
% for breaking column here is set to \gluepenalty (which is high).
% Only lines marked with 'line added by larva' are inserted.
\renewcommand\SB@stanzabreak{%
  \ifhmode\par\fi%
  \ifSB@stanza%
    \SB@breakpoint{%
      \if@stanzasglued% line added by larva
        \gluepenalty% line added by larva
      \else% line added by larva
        \ifSB@inverse%
          \ifSB@prevverse\vvpenalty\else\cvpenalty\fi%
        \else%
          \ifSB@prevverse\vcpenalty\else\ccpenalty\fi%
        \fi%
      \fi% line added by larva
    }%
    \if@stanzasglued% line added by larva
      \global\@stanzasgluedfalse% line added by larva
    \else% line added by larva
      \vskip\versesep%
    \fi% line added by larva
  \fi%
}

% "Glues" consecutive verses together: removes the vertical space between them
% and makes penalty for braking column there almost as high as between lines
% within a verse (see and set penalties above). This is to be used within
% a song environment, and is valid until the next new verse/chorus beginning
% within the same song after declaring this, so use it either in between the
% verses to glue, or within the previous verse. Gluestanzas status is always
% reset when a new song begins, and (after applying it) when a new verse/chorus
% begins.
\newcommand{\glueverses}{%
  \global\@stanzasgluedtrue%
}

% END GLUESTANZAS


% BEGIN ALTCHORDS

% Initialize the color variable.
\definecolor{currentaltchordcolor}{rgb}{0,0,0}%
% Set default color to altchordcolor_a, will also be reset to this at each
% song's end.
\colorlet{currentaltchordcolor}{altchordcolor_a}%

% Set the color for displaying alternate chords, given as a number 1..6.
% The color will be reset to 1 at the beginning of the document, and at the
% end of each song. Called from \@altchordsid and \SB@endsong
\newcommand{\@setaltchordscolor}[1]{%
  \ifnum#1=1%
    \xglobal\colorlet{currentaltchordcolor}{altchordcolor_a}%
  \fi%
  \ifnum#1=2%
    \xglobal\colorlet{currentaltchordcolor}{altchordcolor_b}%
  \fi%
  \ifnum#1=3%
    \xglobal\colorlet{currentaltchordcolor}{altchordcolor_c}%
  \fi%
  \ifnum#1=4%
    \xglobal\colorlet{currentaltchordcolor}{altchordcolor_d}%
  \fi%
  \ifnum#1=5%
    \xglobal\colorlet{currentaltchordcolor}{altchordcolor_e}%
  \fi%
  \ifnum#1=6%
    \xglobal\colorlet{currentaltchordcolor}{altchordcolor_f}%
  \fi%
}

% Shows an id text and optionally changes alternate chords color 1..6, until
% the song ends or color is changed again.
\newcommand{\@altchordsid}[2][1]{%
  \ifchorded\ifshowaltchords%
    \@setaltchordscolor{#1}%
    \color{currentaltchordcolor}%
    \ifx#2\empty\else
      \renewcommand\capo[1]{% % redefines \capo command inside this command
        {\normalfont (capo ##1)}%
      }%
      \makebox[0pt][r]{\raisebox{4ex}{%
        \tiny\colorbox{notebgcolor}{\normalfont \textbf{#2:}}%
      }}%
    \fi%
  \fi\fi%
}%

% Set up the style for alternative chords. This is added to the normal chords
% style.
\providecommand{\altchordstyle}{%
  \footnotesize\itshape%
}

% Meant to be used at the end of a lyric line to specify an alternate set
% of chords for that line to be displayed floated to the right of the line
% in question. Do NOT set chords with \[] macro inside this, as it would mess
% with the chord repeats etc. Instead use plain text for chord names. Also note
% that these plaintext chord names will not be transposed among 'real' chords,
% if \transpose is used. Not displayed on books without chords.
% Only place bar lines, plain text, \id and \e within the parameter. Sharps
% and flats need to be specified with \shrp and \flt here.
%
% To show an ID text, use \id macro within \altchords, preferably as the first
% thing on the first line of this chord set. The optional parameter of \id sets
% the color 1..6 for this chord set, which will be held until the end of the
% song. Numbers 1..3 are meant to be used for different keys with same chords,
% and numbers 4..6 are for alternate chordings in the default key.
% See \@altchordsid.
%
% Example:
%
%  \altchords{\id[1]{Peter (C)}|C | |G |C}
%
\newcommand{\altchords}[1]{%
  \providecommand{\id}[2][1]{\@altchordsid[##1]{##2}}%
  \renewcommand{\meterfont}{\color{chordcolor}\normalfont\tiny\sffamily\upshape}
  \ifchorded\ifshowaltchords%
    \vspaceifnotinverse{.618034\baselineskip}%
    \hfill%
    {\printchord{\altchordstyle\color{currentaltchordcolor}#1}}%
  \fi\fi%
}

% END ALTCHORDS

% Just prints a dash if measure bar lines are enabled and does nothing otherwise.
% Use this if a line would end at a new measure starting without any lyrics in that
% bar on the same line. This signifies that there indeed is a measure here. The
% measure might or might not continue on the next line. You can think of this as
% an abbreviation for "Empty" or "End". :)
\newcommand{\e}{\ifmeasures--\fi}

% Simply a shortened form for \textsuperscript
\newcommand{\up}[1]{%
  \textsuperscript{#1}%
}

% Display alternate lyrics, but without any vertical or horizontal space. Is called
% from \altlyr
\newcommand{\altlyrnospace}[2][*]{%
  {\small\up{#1}\emph{#2}}%
}

% Display alternate lyrics. If inside a verse or chorus, show them on the same line
% (pushed to the right), otherwise include a small vertical space before.
% Usage \altlyr[<superscript>]{<lyrics>}
% If the optional argument is omitted, it will be replaced with an asterisk.
% Example: \altlyr[2]{with love}
\newcommand{\altlyr}[2][*]{%
  \vspaceifnotinverse{.618034\baselineskip}%
  \hfill%
  \altlyrnospace[#1]{#2}%
}

% Put tiny sublyrics, given as the parameter, below the main lyrics (could be
% used for a second voice). This is not very robust; a good idea might be to
% put each bar's sublyrics as it's own \sublyr command. The sublyrics are
% left-aligned with whatever comes immediately after the command, which might
% cause overlapping of \sublyr text with the previous one.
\newcommand{\sublyr}[1]{%
  \makebox[0pt][l]{\raisebox{-1ex}[0pt][1ex]{%
    \tiny #1%
  }}%
}

% Same as \sublyr, but this pushes the main lyrics to the right to make room
% for the sublyrics, instead of aligning. Use carefully.
\newcommand{\sublyrpush}[1]{%
  \makebox{\raisebox{-1ex}[0pt][1ex]{%
    \tiny #1%
  }}%
}

% BEGIN ENDSONG VFILL

\newcounter{@endsongvfillneeded}% counter to hold info about needing vfill at end
\newcounter{@aftersongblocks}\setcounter{@aftersongblocks}{0}

% Call this to request no vfill at song end. The last call within a song to
% \noendsongvfill or \yesendsongvfill will be the one acted on.
\newcommand{\noendsongvfill}{%
  \ifSB@insong%
    \setcounter{@endsongvfillneeded}{0}%
  \fi%
}

% Call this to request a vfill at song end. The last call within a song to
% \noendsongvfill or \yesendsongvfill will be the one acted on.
\newcommand{\yesendsongvfill}{%
  \ifSB@insong%
    \setcounter{@endsongvfillneeded}{1}%
  \fi%
}

\yesendsongvfill% Start with this default

% Zero this, because we don't use postlude and there is other vspace in
% the end of the song:
\beforepostludeskip=0pt plus 0pt minus 0pt

% songs: rewrite this macro to support adding a \vfill to song's end
% conditionally. Also reset alternate chord colors. The modified part is in
% the beginning.
\renewcommand\SB@endsong{%
  % BEGIN modification by larva
  \ifnum\value{@endsongvfillneeded}>0%
    \ifnum\SB@numcols=1% only do a vfill in 1-column situation
      \vspace{0pt plus 1fill minus 0pt}%
    \fi%
  \fi%
  \yesendsongvfill% default to being needed in the next song
  \setcounter{@aftersongblocks}{0}% reset counter for next song
  \@setaltchordscolor{1}%
  % END modification by larva
  \ifSB@insong%
      \ifSB@inverse\SB@erreov\endverse\fi%
      \ifSB@inchorus\SB@erreoc\endchorus\fi%
      \global\SB@skip\versesep%
      \unskip%
      \ifrepchorus\ifvoid\SB@chorusbox\else%
        \ifSB@prevverse\ifvnumbered%
          \marks\SB@cmarkclass{\SB@lastcmark}%
        \fi\fi%
      \fi\fi%
    \endgroup\egroup%
    \begingroup%
      \ifnum\SB@numcols>\z@%
        \hsize\ifpagepreludes\textwidth\else\SB@colwidth\fi%
      \fi%
      \leftskip\z@skip\rightskip\z@skip%
      \parfillskip\@flushglue\parskip\z@skip\parindent\z@%
      \global\setbox\SB@envbox\vbox{%
        \songmark%
        \unvbox\SB@songwrites%
        \ifpagepreludes\else\ifdim\sbarheight>\z@%
          \hrule\@height\sbarheight\@width\hsize%
          \nobreak\vskip5\p@\relax%
        \fi\fi%
        \resettitles%
        \begingroup%
          \songtarget{\ifnum\c@section=\z@1\else2\fi}%
                     {song\theSB@songsnum-\thesongnum}%
        \endgroup%
        \vbox{\makeprelude}%
        \nobreak\vskip\SB@skip%
        \vskip\afterpreludeskip\relax%
      }%
      \ifnum\SB@numcols>\z@\hsize\SB@colwidth\fi%
      \global\setbox\SB@songbox\vbox{%
        \ifpagepreludes\else\unvbox\SB@envbox\fi%
        \unvbox\SB@songbox%
        \nobreak\vskip\SB@skip%
        \vskip\beforepostludeskip\relax%
        \nointerlineskip%
        \vbox{\makepostlude}%
        \ifdim\sbarheight>\z@%
          \nobreak\vskip2\p@\@plus\p@%
          \nointerlineskip%
          \hbox{\vrule\@height\sbarheight\@width\hsize}%
        \fi%
      }%
    \endgroup%
    \SB@insongfalse%
    \edef\SB@sgroup{\thesongnum}%
    \global\SB@groupcnt\z@%
    \ifpagepreludes\SB@submitenv\fi%
    \SB@submitsong%
    \ifnum\SB@grouplvl=\z@\let\SB@sgroup\@empty\fi%
    \stepcounter{songnum}%
  \else%
    \ifSB@intersong\SB@erreor\SB@closeall%
    \else\SB@erreot\fi%
  \fi%
}

% END ENDSONG VFILL

% BEGIN IN-SONG BLOCKS

% This is called in the beginning of each insong-block: translation, showmantra,
% feeler, explanation and lilywrap.
\newcommand{\@blockstart}{%
  \newcount\brkpenorg%
  \brkpenorg\brkpenalty%
  \ifSB@insong%
    % The first block after verses needs a bit more vertical space before it:
    \ifnum\value{@aftersongblocks}=0%
      \vspace{1.618034em}%
    \else%
      \vspace{1em}%
    \fi%
    \brkpenalty\blockpenalty%
    \brk%
    %\vbox to0pt{}% % This trick is not needed anymore :)
    \vspace*{\fill}% % with star to not be deleted after page break
    \addtocounter{@aftersongblocks}{1}%
  \else%
    \ifSB@intersong%
      \vspace{1em}\vspace*{\fill}%
    \fi%
  \fi%
  \brkpenalty\brkpenorg%
}

% Define \blockstart to be able to use in-song block feature manually also
% elsewhere than in the environments defined below.
\newcommand{\blockstart}{\@blockstart}

% Displays the parameter text centered in a large font. Use within songs, but outside
% verses. Intended to be used for short mantras for recitation.
\newcommand{\showmantra}[1]{%
  \yesendsongvfill%
  % Do not call \@blockstart here, as this is not really an after-song block...
  \vspace{1.618034em}%
  \begin{center}%
    {\Large #1}%
  \end{center}%
}

% environment for 'song feeler'
\NewEnviron{feeler}{%
  \ifshowfeeler%
    \yesendsongvfill%
    \@blockstart%
    \small%
    \par\noindent\ignorespaces%
    \begin{center}\begin{em}%
      \BODY%
    \end{em}\end{center}%
  \fi%
}

% \translationoff command can be used inside a song (before the translation
% environment) to turn off displaying of the translation for that song unless
% \translationon is called. The translations are never displayed, if
% \showtranslationfalse is set (in the main document).
\newcommand{\translationoff}{\def\@translationdisabled{}}
\newcommand{\translationon}{\let\@translationdisabled\undefined}

% Setup the style for the translation. Renew this macro in the beginning of
% your document to set custom style for translations. (This will be called
% each time in the beginning of the translation block, within it.)
\newcommand{\translationstyle}{}

% Environment for song translation, to be used only inside a song
\newenvironment{translation}{%
  % Check if this environment needs hiding
  \newif\ifhide\hidefalse%
  \ifshowtranslation\else\hidetrue\fi%
  \ifdefined\@translationdisabled\hidetrue\fi%
  % If hiding is needed, hide the rest using verbatim's \comment
  \ifhide\expandafter\comment\fi%
  % The following, including the environment body, is only expanded and
  % processed, if no hiding is needed:
  \yesendsongvfill%
  \newcommand{\nextverse}{\brkpenalty=\translationvvpenalty\brk\vspace{.5em}}% some vertical space between verses
  \beginverse*%
  \vspace{-\versesep}% remove the vertical space created by \beginverse
  \@blockstart%
  \chordsoff%
  \small\translationstyle%
}{%
  % Check if this environment needs hiding, which means it IS hidden
  \newif\ifhide\hidefalse%
  \ifshowtranslation\else\hidetrue\fi%
  \ifdefined\@translationdisabled\hidetrue\fi%
  \ifhide% End hidden section (\endcomment from verbatim package):
    \expandafter\endcomment%
  \else% Run the post command(s):
    \endverse%
  \fi%
}

% environment for 'song explanation'
\NewEnviron{explanation}{%
  \ifshowexplanation%
    \noendsongvfill% so far explanation is last: no vfill needed at song end
    \@blockstart%
    \setlist[description]{% modify description list (enumitem package)
      %topsep=30pt,%      % space before start / after end of list
      %itemsep=5pt,%      % space between items
      font={\rmfamily}%   % set the label font
    }%
    \justifying% ragged2e package: force justifying
    \rmfamily\footnotesize%
    \par\noindent\ignorespaces%
    \BODY%
    \par\noindent\ignorespacesafterend%
  \fi%
}

% Environment for wrapping lilypond.
\NewEnviron{lilywrap}{%
  \ifshowlilypond%
    \yesendsongvfill% if lilypond is last, add vfill at song end
    \@blockstart%
    \BODY%
  \fi%
}

% END IN-SONG BLOCKS

% BEGIN IMAGES (IN-SONG AND OUT)

% \image?? macros include an image here. It is scaled so that it's width is
% a power of golden ratio conjugate of \linewidth. The optional parameter is
% the power [0..7] and if not given, defaults to 1. Value 0 will scale the
% image to maximum size, so it's width is \linewidth. The mandatory parameter
% is the image file name without path. Put the image in content/img (or other
% path specified by \graphicspath above). These commands can be used within and
% outside of songs.
%
%   - \imagel puts the image exactly at the current position
%   - \imager pushes the image to the right
%   - \ịmagec centers the image horizontally
%   - \imagecc centers the image horizontally and vertically
%   - \imagecb centers the image horizontally and pushes it to the bottom of the page
%   - \imagelc centers the image vertically
%   - \imagerc pushes the image to the right and centers it vertically
%   - \imagerb pushes the image to the right and bottom of page
%
% Example: \imagecc[2]{nicepic.png}
%   This scales the image width to 0.618034^2 * \linewidth and centers it both
%   horizontally and vertically in the space available.

\newcommand{\imagel}[2][1]{%
  \@setgrcwidth[#1]%
  \includegraphics[width=\@grcwidth]{#2}%
}

\newcommand{\imager}[2][1]{%
  \hfill\imagel[#1]{#2}%
}

\newcommand{\imagec}[2][1]{%
  \begin{center}%
    \imagel[#1]{#2}%
  \end{center}%
}

\newcommand{\imagecc}[2][1]{%
  \begin{center}%
    \ifSB@insong\@blockstart\else\vfill\fi%
    \imagel[#1]{#2}%
    \ifSB@insong\yesendsongvfill\else\vfill\fi%
  \end{center}%
}

\newcommand{\imagecb}[2][1]{%
  \begin{center}%
    \ifSB@insong\@blockstart\else\vfill\fi%
    \imagel[#1]{#2}%
    \noendsongvfill%
  \end{center}%
}

\newcommand{\imagelc}[2][1]{%
  \ifSB@insong\@blockstart\else\vfill\fi%
  \imagel[#1]{#2}%
  \ifSB@insong\yesendsongvfill\else\vfill\fi%
}

\newcommand{\imagerc}[2][1]{%
  \begin{center}%
    \ifSB@insong\@blockstart\else\vfill\fi%
    \imager[#1]{#2}%
    \ifSB@insong\yesendsongvfill\else\vfill\fi%
  \end{center}%
}

\newcommand{\imagerb}[2][1]{%
  \ifSB@insong\@blockstart\else\vfill\fi%
  \imager[#1]{#2}%
  \noendsongvfill%
}

\newdimen\@grcwidth% This is set by \setgrcwidth and used in \imagel

% Sets \@grcwidth to hold a power of golden ratio conjugate (0.618034^n)
% Optional parameter (given within []) is the exponent as integer in
% [0..7] and if omitted, defaults to 1.
% Used in \imagel.
% (I know this is an idiotic way to produce these, but oh well -- LaTeX...)
\newcommand{\@setgrcwidth}[1][1]{%
  \IfEq{#1}{0}{\setlength\@grcwidth{1\linewidth}}{}% 1
  \IfEq{#1}{1}{\setlength\@grcwidth{.618034\linewidth}}{}% 0.618034
  \IfEq{#1}{2}{\setlength\@grcwidth{.381966\linewidth}}{}% 0.618034^2
  \IfEq{#1}{3}{\setlength\@grcwidth{.236067\linewidth}}{}% 0.618034^3
  \IfEq{#1}{4}{\setlength\@grcwidth{.145898\linewidth}}{}% 0.618034^4
  \IfEq{#1}{5}{\setlength\@grcwidth{.090169\linewidth}}{}% 0.618034^5
  \IfEq{#1}{6}{\setlength\@grcwidth{.055728\linewidth}}{}% 0.618034^6
  \IfEq{#1}{7}{\setlength\@grcwidth{.034441\linewidth}}{}% 0.618034^7
}

% END IMAGES (IN-SONG AND OUT)

% BEGIN MELODY NOTES

% MELODY NOTES feature
%
% The \mn??? commands display an encircled note name hint above the chord
% line. They are meant to display (sung) melody notes above the lyrics. The
% commands must be called from within a chord definition \[]. The note name must
% be written as upper case for transposing to work, even though the result
% is actually presented in lower case.
%
% To disable showing of the notes for the whole document, set \shownotesfalse
% in the main document preamble (after including this package).
%
% Call \notesoff command between verses to disable showing of notes in the
% following verses of the song.
%
% The recommended use for this feature is to display at least the first sung
% non-unison melody interval of each song, preferably for the whole first line
% of lyrics. So just specify the first melody notes and use \notesoff after
% the first verse. If chord replaying feature is used, it is possible to define
% notes not paired with a chord with ^ to not include them in the chord
% memorization, thus negating the need to put ^ for that note in later verses
% where chords are replayed. Example: \[^\mn{C}]
%
% Choose the correct command:
%
%   \mn{<note>}                     : on verse's first line
%   \mnc{<note>}                    : on verse's first line, above a chord
%   \mncii{<note>}{<note>}          : on first line, 2 notes, above a chord
%   \mnciii{<note>}{<note>}{<note>} : on first line, 3 notes, above a chord
%   \mncadj{<hadj>}{<note>}         : on first line, above a chord, with
%                                     adjusted horizontal position
%   \mnlow{<notename>}              : on other lines of a verse
%
% Use \mn, \mnc, \mncii or \mnciii to display notes on the first line of lyrics
% or in verses or choruses defined with \mn<begin|end><verse|chorus> pair rather
% than the ordinary \<begin|end><verse|chorus>. Elsewhere they would overlap
% the lyrics on the line above. Use \mn if the note is not to be displayed at
% the exact same horizontal spot as a chord, and use \mnc to display a note and
% a chord on top of each other: in that case you must put the chord immediately
% after the \mnc command within the same chord definition brackets.
%
% \mncii and \mnciii are really two and three note extensions of \mnc: with
% them one can put two or three notes on top of one chord. They are also meant
% to be used only on the first line of lyrics in a verse or verses defined with
% \mn* macros.
%
% \mnlow doesn't put the note so high above the chord line, so use it on other
% than the first line of lyrics with the caveat, that chords and notes are put
% beside each other.
%
% If one whishes to use 
%
% Example usage:
%
%   \[\mnc{A}Am]Love is \[\mn{E}]great
%   and \[\mnlow{D#}]food tastes \[\mnlow{A}]good
%
%   \[\mnciii{C}{A}{F}Fmaj7]Tralalaa

% Setup the style for the circle around a melody note. Renew this macro in the
% beginning of your document to set custom style. This will be called each
% time the melody note circle is drawn. This can be set for individual notes,
% too.
\newcommand{\mncirclestyle}{}

% Setup the style for the melody note name "text". Renew this macro in the
% beginning of your document to set custom style. This will be called each
% time the melody note circle is drawn. This can be set for individual notes,
% too.
\newcommand{\mnsymbolstyle}{}

% Base style for the melody note circle, appended with \mncirclestyle:
\newcommand{\@mncirclestyle}{%
  \footnotesize\color{melodynotecirclecolor}\mncirclestyle%
}
% Base style for the melody note name symbol, appended with \mnsymbolstyle:
\newcommand{\@mnsymbolstyle}{%
  \tiny\mdseries\color{melodynotecolor}\mnsymbolstyle%
}

% Lowered sharp symbol to fit better inside the melody note circle:
\newcommand{\@lowsharpsymbol}{\raise-.25ex\hbox{\textsuperscript{{\symbolfont♯}}}}%

% Will hold the width of the melody note circle:
\newdimen{\@mncirclewidth}

% Calculates the width encircled melody note. Note that if the style in
% \@note changes, so must it here.
\newcommand{\@calcmncirclewidth}{%
  \settowidth{\@mncirclewidth}{\@mncirclestyle\textcircled{}}%
}

% If true, negative space will be applied after displaying the note:
\newif\if@mnnegspace\@mnnegspacefalse

% Outputs an encircled melody note, internal
%   - optional parameter: rise the note above text (chord line) by this amount,
%                         defaults to 1em
%   - mandatory parameter: the note, must be in upper case
%   * Example usage: \@note[0.5em]{C#}
%   * Note that if the style here changes, so must it in @calcmncirclewidth
\newcommand{\@note}[2][1em]{%
  \ifshownotes%
    \ifdefined\@melodynotesdisabled%
    \else%
      \notenamesout abcdefg%
      \raisebox{#1}{%
        % Use lowered sharp symbol to better fit inside the circle
        \renewcommand{\sharpsymbol}{\@lowsharpsymbol}%
        \@mncirclestyle%
        \textcircled{% % Show the note transposed and encircled
          \@mnsymbolstyle\transposehere{#2}%
        }%
        \if@mnnegspace%
          \@calcmncirclewidth% % Calculate the width...
          \hspace{-\@mncirclewidth}% % ...to go left
        \fi%
      }%
    \fi%
  \fi%
}

% Displays a melody note, to be used on the first line of lyrics.
% See above for usage information.
\newcommand{\mn}[1]{%
  \@mnnegspacefalse\@note{#1}%
}

% Displays a melody note above a chord, to be used on the first line of lyrics.
% See above for usage information.
\newcommand{\mnc}[1]{%
  \@mnnegspacetrue\@note{#1}%
}

% Displays a melody note above a chord, with its position adjusted horizontally,
% to be used on the first line of lyrics. See above for usage information.
\newcommand{\mncadj}[2]{%
  \hspace{#1}%
  \@mnnegspacetrue\@note{#2}%
  \hspace{-#1}%
}

% Displays two melody notes above a chord, to be used on the first line of
% lyrics. See above for usage information.
\newcommand{\mncii}[2]{%
  \ifshownotes%
    \ifdefined\@melodynotesdisabled%
    \else%
      \@mnnegspacefalse%
      \@note{#1}\@note{#2}%
      \@calcmncirclewidth%
      \hspace{-2\@mncirclewidth}%
    \fi%
  \fi%
}

% Displays three melody notes above a chord, to be used on the first line of
% lyrics. See above for usage information.
\newcommand{\mnciii}[3]{%
  \ifshownotes%
    \ifdefined\@melodynotesdisabled%
    \else%
      \@mnnegspacefalse%
      \@note{#1}\@note{#2}\@note{#3}%
      \@calcmncirclewidth%
      \hspace{-3\@mncirclewidth}%
    \fi%
  \fi%
}

% Displays a melody note, to be used on other than the first line of lyrics.
% See above for usage information.
\newcommand{\mnlow}[1]{%
  \@mnnegspacefalse\@note[0.4em]{#1}%
}

% \noteson and \notesoff commands can be used inside a block to turn displaying
% the melody notes on or off for the remaining of the block or until another
% another call to either of the macros. Regardless of this setting, the notes
% are never displayed if \shownotesfalse is set (in the main document).
\newcommand{\notesoff}{\def\@melodynotesdisabled{}}
\newcommand{\noteson}{\let\@melodynotesdisabled\undefined}

\newlength{\@mnoldbaselineadj} % to save the \baselineadj before change
%\@mnoldbaselineadj=\baselineadj % Not needed

% Save baselineadj value to a register
\newcommand{\@mnsavebaselineadj}{%
  \@mnoldbaselineadj=\baselineadj%
}

% Reset baselineadj to the old value
\newcommand{\@mnresetbaselineadj}{%
  \baselineadj=\@mnoldbaselineadj%
}

% Increases the spacing between lyric rows, if melody notes are on
\newcommand{\@mnincreasebaseline}{%
  \@mnsavebaselineadj%
  \ifchorded\ifshownotes%
    \ifdefined\@melodynotesdisabled%
    \else%
      \baselineadj=+.5em\relax%
    \fi%
  \fi\fi%
}

% Replace the verse/chorus starting macros with versions that save the baseline
% adjustment value before calling the originals.
\let\@beginverseorig\beginverse
\let\@beginchorusorig\beginchorus
\renewcommand{\beginverse}{\@mnsavebaselineadj\@beginverseorig}
\renewcommand{\beginchorus}{\@mnsavebaselineadj\@beginchorusorig}
% Replace the macros called at the end of each verse/chorus with versions that
% call the originals and reset the baseline to the last saved one.
\let\@SB@endverseorig\SB@endverse
\let\@SB@endchorusorig\SB@endchorus
\renewcommand{\SB@endverse}{\@SB@endverseorig\@mnresetbaselineadj}
\renewcommand{\SB@endchorus}{\@SB@endchorusorig\@mnresetbaselineadj}

% \mnbegin<verse|chorus> macros are replacements for the ordinary
% \begin<verse|chorus>, with increased line spacing to accomodate notes
% also in other than the first line of lyrics without resorting to \mnlow macro
% and it's caveats. For non-chorded books or if melody notes are disabled,
% spacing is not increased.
\newcommand{\mnbeginverse}{\@mnincreasebaseline\@beginverseorig}
\newcommand{\mnbeginchorus}{\@mnincreasebaseline\@beginchorusorig}
\newcommand{\mnendverse}{\endverse} % For backwards compatibility, deprecated
\newcommand{\mnendchorus}{\endchorus} % For backwards compatibility, deprecated


% END MELODY NOTES

% BEGIN BEAT MARKS

% BEAT MARKS feature
%
% The \bm??? commands are used within chord definitions \[] to mark spots where
% beats appear. They appear as small dots in chord color just below the
% baseline of the chords.
%
% Use \bm, when the beat mark is by itself (without chord or melody note).
%
% Use \bmc when you want to put the mark at the same horizontal space, on top of
% each other, with a melody note and/or a chord. In such a case \bmc should
% always be before the chord. and the recommended order is: beat mark, melody
% note, chord. If \bm or \bmc is followed immediately by a chord, there must be
% a space in between of them.
%
% \bmadj and \bmcadj{} are variations which take one mandatory parameter in
% curly braces: a horizontal adjustment of the mark position as a dimension.
% \bmadj{-.5ex} moves the mark about half a character width left from where it
% would appear without adjustment, and \bmadj{.5ex} moves it to the right.
%
% To disable showing of the beats for the whole document, set \showbeatsfalse
% in the main document preamble (after including this package).
%
% Call \beatsoff command between verses to disable showing of notes in the
% following verses of the song. \beatson puts them back for the next verses
% (unless \showbeatsfalse is set in the main doc).
%
% Example usage:
%
%   |\[\bmc Am]Love \[\bm]is |\[\bm]great \[\bm]
%   and |\[bm]food \[bm]tastes |\[\bm]good \[\bm]
%
%   \[\bmc\mnc{C}C]Trallallaaa
%


% Lay the actual mark
\newcommand{\@bmmark}{{%
  \color{mbarcolor}%
  \raisebox{-.65ex}[0pt][.25ex]{%
    \scriptsize\symboliifont{🞄}%
  }%
}}%
% Leading space before beat mark (ex comes from chord font):
\newcommand{\@bmleadspace}{.36ex}

% Will hold the width of the beat mark without leading space:
\newdimen{\@bmwidth}%

% Displays a beat mark. See above for usage information.
\newcommand{\bm}{%
  \ifshowbeats%
    \ifdefined\@beatsdisabled%
    \else%
      \hspace{\@bmleadspace}%
      \@bmmark%
      \settowidth{\@bmwidth}{\@bmmark}%
    \fi%
  \fi%
}

% Displays a beat mark. See above for usage information.
\newcommand{\bmc}{%
  \ifshowbeats%
    \ifdefined\@beatsdisabled%
    \else%
      \bm%
      \hspace{-\@bmleadspace}%
      \hspace{-\@bmwidth}%
    \fi%
  \fi%
}

% Displays a beat mark with horizontal adjustment. See above for usage
% information.
\newcommand{\bmadj}[1]{%
  \ifshowbeats%
    \ifdefined\@beatsdisabled%
    \else%
      \hspace{#1}%
      \bm%
    \fi%
  \fi%
}

% Displays a beat mark with horizontal adjustment. See above for usage
% information.
\newcommand{\bmcadj}[1]{%
  \ifshowbeats%
    \ifdefined\@beatsdisabled%
    \else%
      \hspace{#1}%
      \bmc{#1}%
      \hspace{-#1}%
    \fi%
  \fi%
}

% \beatson and \beatsoff commands can be used between verses to turn displaying
% the beat marks on or off for the remaining of the current song or until
% another call to either of the macros. The notes are never displayed, if
% \showbeatsfalse is set (in the main document).
\newcommand{\beatsoff}{\def\@beatsdisabled{}}
\newcommand{\beatson}{\let\@beatsdisabled\undefined}

% END BEAT MARKS

% BEGIN PRELUDE

% Support for "offered to" information, used in astral books. This is displayed
% after the by field in the song prelude, prepended with "offered to:" text and
% parenthesized.
% To disable displaying this extra info in the song preludes for the whole
% document, set \showofffalse in the main document preamble (after including
% this package).
% To set this for a song, use the optional off={} parameter for \beginsong.
\newcommand{\offeredto}{}
\newsongkey{off}{\def\offeredto{}}
                {\def\offeredto{#1}}

% Support for extra song information. The extra information can be used for
% example to contain information about song origins or language.
% To disable displaying this extra info in the song preludes for the whole
% document, set \showexfalse in the main document preamble (after including
% this package).
% To set this for a song, use the optional ex={} parameter for \beginsong.
\newcommand{\extrainfo}{}
\newsongkey{ex}{\def\extrainfo{}}
               {\def\extrainfo{#1}}

% Support for key information. This key is supposed to hold the musical key
% (for example "C" or "Am" without quotes) of the song, after transposing.
% So remember to change this if you transpose.
% To enable displaying these keys in the song preludes for the whole
% document, set \showkeytrue in the main document preamble (after including
% this package).
% To set this for a song, use the optional key={} parameter for \beginsong.
\newcommand{\key}{}
\newsongkey{key}{\def\key{}}
                {\def\key{#1}}


% Text style for the key line in the prelude, meant for changing the font
% and size -- colors, italics and bolds are set implicitly. Can be set before
% including this file.
\providecommand{\preludekeylinestyle}{}
% Texts for key info in prelude. Can be set before including this file.
\providecommand{\preludetextkey}{Key:}
\providecommand{\preludetextgood}{good:} % ", " is prepended before this
\providecommand{\preludetextgoodkeysalone}{Good keys:}

% Support for a list of good keys (range) for a song. This keyval is supposed
% to hold the good (for singing) keys this song to be played in.
%
% To set this for a song, use the optional gk={} parameter for \beginsong.
% The preferred format for this text is {X, Y--Z}, where X is the preferred
% "best" key, and the Y--Z is the range of keys where the melody stays within
% a range limited by G note in the low end, and the B note of the next octave
% in the high end. Example: gk={Bm, Gm--Cm}. If such a range is impossible,
% put the keys in the range in parenthesis.
%
% The good keys list is displayed in the song preamble. To disable displaying
% this for the whole document, set \showgoodkeysfalse in the main document
% preamble (after including this package).
\newcommand{\goodkeys}{}
\newsongkey{gk}{\def\goodkeys{}}
               {\def\goodkeys{#1}}

% Support for phase hints for songs.
% To disable displaying these phases in the song preludes for the whole
% document, set \showphfalse in the main document preamble (after including
% this package).
% To set this for a song, use the optional ph={} parameter for \beginsong.
\newcommand{\phaselist}{}%
\newsongkey{ph}{\def\phaselist{}}
               {\def\phaselist{#1}}

% BEGIN PRELUDE/TAGS

% Support for tags for songs.
% To disable displaying the tags in the song preludes for the whole
% document, set \showtagsfalse in the main document preamble (after including
% this package).
% To set these for a song, use the optional tags={} parameter for \beginsong.
% An example: \beginsong{Songname}[tags={fire, water}]. Valid tags are defined
% in file 'tags.can'.

% Setup the style for the taglist in the prelude, empty by default. Set before
% including this file. (This will be called each time in the beginning of the
% taglist block in the prelude, within it.)
\providecommand{\preludetagstyle}{}

\newcommand{\taglist}{}% defined below for each song

\newsongkey{tags}{\def\taglist{}\def\SB@rawrefs{}\gdef\songrefs{}}%
                 {\def\taglist{#1\par}%
                  % add ' 1' to work around the songs' scripture reference
                  % system's (which we are using here) expectation of bible
                  % chapter number:
                  \def\SB@rawrefs{#1 1}\SB@parsesrefs{#1 1}}

\renewcommand\SB@makescripindex{%
  \renewenvironment{SB@lgidx}[1]{%
    \gdef\SB@idxcolhead{##1}%
    % % larva: Following three lines are commented out to skip the line used
    % % for book name:
    %\hbox to\hsize{{\idxbook{##1}}\hfil}%
    %\nobreak%
    %\SB@idxheadsep\nointerlineskip%
  }{%
    \mark{\noexpand\relax}%
    \penalty-20\vskip3\p@\@plus3\p@\relax%
  }%
  \renewenvironment{SB@smidx}[1]
    {\begin{SB@lgidx}{##1}}{\end{SB@lgidx}}%
  \renewcommand\idxentry[2]{%
    \SB@ellipspread{\idxscripfont\relax\SB@idxcolhead}%
    % ##1 -> SB@idxcolhead to display 'book name' instead of 'chapter number'
                   {{\idxrefsfont\relax##2}}%
    \SB@toks\expandafter{\SB@idxcolhead}%
    \mark{\noexpand\SB@idxcont{\the\SB@toks}}%
  }%
  \renewcommand\idxaltentry[2]{\SB@erridx{a scripture}}%
  \SB@displayindex%
}

% END PRELUDE/TAGS


% Redefine displaying of song prelude extension. This version adds some of the
% new song keyvals introduced above. \showrefs is removed, because we use the
% scripture references as tags (they are displayed in the modified \makeprelude
% below).
\renewcommand{\extendprelude}{%
  \setbox\SB@box\hbox{%
    \ifshowauth%
      \ifx\songauthors\empty%
      \else{\bfseries\sfcode`.\@m\songauthors}
      \fi%
    \fi%
    \ifshowoff%
      \ifx\offeredto\empty%
      \else{ (\textit{offered to:} \offeredto)}%
      \fi%
    \fi%
  }
  \ifdim\wd\SB@box>\z@\unhbox\SB@box\par\fi%
  \ifshowex\extrainfo\par\fi%
  % % The following would show the song's key below author, but it is now
  % % commented out, because we now show it in the RT area
  % \ifchorded%
  %   \ifshowkey%
  %     \ifx\key\empty%
  %       % \key is empty, do nothing
  %     \else%
  %       Key: \textbf{\color{chordcolor}\key}\par%
  %     \fi%
  %   \fi%
  % \fi%
}

% Set the amount to rise or lower the position of the items in the RT
% box in the song prelude, relative to the baseline of the main title
% (the ex comes from the title font, too).
\newdimen{\@preludeRTfirstraise}\setlength{\@preludeRTfirstraise}{1.618034ex}%
\newdimen{\@preludeRTsecondraise}\setlength{\@preludeRTsecondraise}{0pt}%
\newdimen{\@preludeRTthirdraise}\setlength{\@preludeRTthirdraise}{-1.618034ex}%
\newdimen{\@preludeRTfourthraise}\setlength{\@preludeRTfourthraise}{-3.236068ex}%
\newdimen{\@preludeRTraise} % set later

\newcounter{@preludeRTrowscreatedcount}
% sets the \@preludeRTraise dimension on basis of @preludeRTrowscreatedcount, ie how
% many lines have already been added to the prelude's RT component.
\newcommand\@setpreludeRTraise{%
  \ifnum\value{@preludeRTrowscreatedcount}=0%
    \setlength{\@preludeRTraise}{\@preludeRTfirstraise}%
  \fi%
  \ifnum\value{@preludeRTrowscreatedcount}=1%
    \setlength{\@preludeRTraise}{\@preludeRTsecondraise}%
  \fi%
  \ifnum\value{@preludeRTrowscreatedcount}=2%
    \setlength{\@preludeRTraise}{\@preludeRTthirdraise}%
  \fi%
  \ifnum\value{@preludeRTrowscreatedcount}=3%
    \setlength{\@preludeRTraise}{\@preludeRTfourthraise}%
  \fi%
}

% Redefine the song prelude display. Only one line is modified (into a block,
% see comment) to show the phase, tags and key info.
\renewcommand\makeprelude{
  \resettitles%
  \ifslides%
    \hbox to\hsize{{\hfil\stitlefont\relax\songtitle\hfil}}%
    \vskip5\p@%
    \hbox to\hsize{%
      \hfil%
      \vbox{%
        \divide\hsize\tw@\parskip\p@\relax%
        \centering\small\extendprelude%
      }%
      \hfil%
    }%
  \else%
    \ifdim\songnumwidth>\z@%
      \setbox\SB@boxii\hbox{{\SB@colorbox\snumbgcolor{%
        \hbox to\songnumwidth{%
          \printsongnum{\thesongnum}\hfil%
        }%
      }}}%
    \fi%
    \setbox\SB@box\vbox{%
      \ifdim\songnumwidth>\z@%
        \SB@dimen\wd\SB@boxii%
        \advance\SB@dimen3\p@%
        \ifpagepreludes\multiply\SB@dimen\tw@\fi%
        \advance\hsize-\SB@dimen%
      \fi%
      \ifpagepreludes\centering\else\SB@raggedright\fi%
      \offinterlineskip\lineskip\p@%
      {\stitlefont\relax%
       \songtitle%
       {% larva: begin modifications for RT area: ph, tags and keys display
         \setcounter{@preludeRTrowscreatedcount}{0}%
         \@setpreludeRTraise%
         \hfill%
         \ifshowph\ifnowidth{\phaselist}{}{% % Show phase
           \makebox[0pt][r]{\raisebox{\@preludeRTraise}[0pt][0pt]{%
             \tiny\normalfont\rmfamily\phaselist%
           }}%
           \stepcounter{@preludeRTrowscreatedcount}%
           \@setpreludeRTraise%
         }\fi%
         \ifshowtags\ifnowidth{\taglist}{}{% % Show tags
           \makebox[0pt][r]{\raisebox{\@preludeRTraise}[0pt][0pt]{%
             \tiny\textit{\preludetagstyle\taglist}%
           }}%
           \stepcounter{@preludeRTrowscreatedcount}%
           \@setpreludeRTraise%
         }\fi%
         \ifchorded% % Show key + good keys (if in chorded mode)
           \def\keylinetext{\normalfont}%
           \ifshowkey\ifx\key\empty\else%
             \g@addto@macro\keylinetext{\textit{\preludetextkey} \textbf{\color{chordcolor}\key}}%
           \fi\fi%
           \ifshowgoodkeys\ifx\goodkeys\empty\else%
             \ifx\keylinetext\empty%
               \g@addto@macro\keylinetext{\textit{\preludetextgoodkeysalone} \textbf{\goodkeys}}%
             \else%
               \g@addto@macro\keylinetext{\textit{, \preludetextgood} \textbf{\goodkeys}}%
             \fi%
           \fi\fi%
           \ifx\keylinetext\empty\else%
             \makebox[0pt][r]{\raisebox{\@preludeRTraise}[0pt][0pt]{%
               \tiny\preludekeylinestyle\keylinetext%
             }}%
             \stepcounter{@preludeRTrowscreatedcount}%
             \@setpreludeRTraise%
           \fi
         \fi
       }% larva: end modifications for RT area: ph, tags and keys display
       \par%
       \nexttitle%
       \foreachtitle{(\songtitle)\par}}%
      \ifdim\prevdepth=\z@\kern\p@\fi%
      \parskip\p@\relax\tiny%
      \extendprelude%
      \kern\z@%
    }%
    \ifdim\songnumwidth>\z@%
      \hbox{%
        \ifdim\ht\SB@boxii>\ht\SB@box%
          \box\SB@boxii%
          \kern3\p@%
          \vtop{\box\SB@box}%
        \else%
          \SB@colorbox\snumbgcolor{\vbox to\ht\SB@box{{%
            \hbox to\songnumwidth{%
              \printsongnum{\thesongnum}\hfil%
            }\vfil%
          }}}%
          \kern3\p@%
          \box\SB@box%
        \fi%
      }%
    \else%
      \unvbox\SB@box%
    \fi%
  \fi%
}

% END PRELUDE


% BEGIN AUDIO

% Audio system is used to set URL's for audio for songs and chapters. These
% will be utilized in the future.

% keyval: Setup keys to be used as \audio macro's argument:
\define@key{audio}{title}{\def\audio@title{#1}}%
\define@key{audio}{key}{\def\audio@key{#1}}%
\define@key{audio}{pitch}{\def\audio@pitch{#1}}%
\setkeys{audio}{title={},key={},pitch={440}}%

% Use this command to set a URL link to audio for the current song or chapter.
% Must be called within a song or a chapter. Multiple \audio definitions can be
% set for each song/chapter; the first is the primary one. Mandatory argument
% is the URL, and the preceding optional argument contains keyval pairs,
% currently supported keys are 'title', 'key' and 'pitch'. Pitch is the
% frequency of A (default: 440).
% Note that the following characters must be escaped (with \): & % _

%
% Example: \audio[title={Good version},key={Am}]{https://link-to-audio.com}
\newcommand{\audio}[2][]{%
  \setkeys{audio}{#1}% Set new keys
  % Access title with: \audio@title,
  %          key with: \audio@key,
  %        pitch with: \audio@pitch,
  %          URL with: #2
}

% END AUDIO


% BEGIN textual notes

% Displays a textual note given as parameter on a new line. This is similar
% to song.sty's \textnote, but with some additions.
%
% If given from within a stanza (verse/chorus), only small vertical space is
% added before and after the note. Otherwise the vertical space given as
% optional parameters is used.
%
% The note is attached to the material after it (default), or to the matter
% after it (if first optional star is present). This means that column breaks do
% not happen between the note and the stuff it is attached to. Attachment is
% ignored if called from within a stanza.
%
% If the note is attached to the material after it, and called from outside of
% of stanzas, the \glueverses macro is called to remove the \vspace the
% beginning of the next verse in the current song would give. This might cause
% a problem if there is material between this note and the next stanza. In such
% a case one can attach the note to the material before, or add the second star
% to signify that \glueverses is never called from within this macro.
%
% Usage:
%
%   \ultextnote*[vspace before][vspace after]{text}*
%
%   1st star:      This optional star signifies that the note is attached to the
%                  stuff before it. If it is omitted, the note is attached to
%                  the stuff coming after it.
%   vspace before: The amount of vspace added before the note. This is passed
%                  to \vspace, and can contain macros, for example:
%                  "0.5\versesep". Default: 0pt.
%   vspace after:  The amount of vspace added after the note. This is passed
%                  to \vspace, and can contain macros, for example:
%                  "0.5\versesep". Default: 0pt.
%   text:          The text content of the note.
%   2nd star:      If present, this star means that \glueverses is not called in
%                  any case.
%
% NOTE: If optional parameters are omitted, also the empty bracket pair must
%       be left out! So no "[]".
%
%
% Note: \NewDocumentCommand, IfValueTF etc. come from xparse package, and allow
%       nice handling of parameters.
\NewDocumentCommand{\ultextnote}{s o o m s}{% star (attach to stuff before), [vspace before], [vspace after] {text}, star (skip glue next verse in all cases)
  \newif\if@@alwaysskipgluenextstanza%
  \newif\if@@attachtobefore%
  \IfBooleanTF{#1}{% star is given: attach to the previous stanza
    \@@attachtobeforetrue%
  }{% star is not given: attach to the next stanza
    \@@attachtobeforefalse%
  }
  \IfValueTF{#2}{% vspace for before is given
    \def\@@vspacebef{#2}%
  }{ % vspace for before is not given
    \def\@@vspacebef{0pt}%
  }%
  \IfValueTF{#3}{% vspace for after is given
    \def\@@vspaceaft{#3}%
  }{ % vspace for after is not given
    \def\@@vspaceaft{0pt}%
  }%
  \def\content{#4}%
  \IfBooleanTF{#5}{% star is given: skip gluestanzas always
    \@@alwaysskipgluenextstanzatrue%
  }{% star is not given: might have gluestanzas if attached to aft
    \@@alwaysskipgluenextstanzafalse%
  }%
  % The following is an adaptation of \textnote in songs.sty
  \ifhmode\par\fi%
  \ifSB@insong%
    \ifnum\lastpenalty=12345\else%
      \ifSB@inverse%
        \vskip2\p@\relax%
      \else\ifSB@inchorus%
        \vskip2\p@\relax%
      \else\ifSB@stanza%
        \if@@attachtobefore\else%
          \brkpenalty=\vvpenalty\brk%
        \fi%
        \vspace{\@@vspacebef}%
      \fi\fi\fi%
    \fi%
  \else%
    \vspace{\@@vspacebef}%
  \fi%
  \begingroup%
    \everypar{}%
    \ifchorded\chordedfalse\SB@setbaselineskip\chordedtrue\fi%
    \placenote{\SB@colorbox\notebgcolor{\SB@boxup{\content}}}%
  \endgroup%
  \nobreak%
  \ifSB@insong%
    \ifSB@inverse%
      \vskip2\p@\relax%
    \else\ifSB@inchorus%
      \vskip2\p@\relax%
    \else%
      \if@@attachtobefore%
        \ifSB@stanza%
          \brkpenalty=\vvpenalty\brk%
        \fi%
      \else%
        \nobreak%
        \if@@alwaysskipgluenextstanza\else\glueverses\fi%
      \fi%
      \vspace{\@@vspaceaft}%
    \fi\fi%
  \else%
    \vspace{\@@vspaceaft}%
  \fi%
}

% Creates a textual note attached to the material preceding it.
\newcommand{\textnoteforprev}[1]{%
  \ultextnote*[0.618034\versesep][\versesep]{#1}%
}

% Creates a textual note attached to the material coming after it.
\newcommand{\textnotefornext}[1]{%
  \ultextnote[\versesep][0.618034\versesep]{#1}%
}

% Creates a textual note in the middle of preceding and consequent material.
% It is attached to the material coming after it, but does not call \glueverses.
\newcommand{\textnotemiddle}[1]{%
  \ultextnote[\versesep][\versesep]{#1}*%
}

% Creates a textual note in the middle of preceding and consequent material
% with smaller vertical space around it.
% It is attached to the material coming after it, but does not call \glueverses.
\newcommand{\textnotemiddletight}[1]{%
  \ultextnote[0.618034\versesep][0.618034\versesep]{#1}*%
}

% Creates a music note attached to the material preceding it.
% Music notes are only displayed if chords are enabled, and in the same color
% as the chords.
\newcommand{\musicnoteforprev}[1]{%
  \ifchorded\textnoteforprev{\color{chordcolor}#1}\fi%
}

% Creates a music note attached to the material coming after it.
% Music notes are only displayed if chords are enabled, and in the same color
% as the chords.
\newcommand{\musicnotefornext}[1]{%
  \ifchorded\textnotefornext{\color{chordcolor}#1}\fi%
}

% Creates a textual note in the middle of preceding and consequent material.
% It is attached to the material coming after it, but does not call \glueverses.
% Music notes are only displayed if chords are enabled, and in the same color
% as the chords.
\newcommand{\musicnotemiddle}[1]{%
  \ifchorded\textnotemiddle{\color{chordcolor}#1}\fi%
}

% Rewrite capo presentation to attach to the material coming after it, and to
% make it smaller than the default. Only shown if chords are enabled.
\renewcommand\capo[1]{%
  \iftranscapos\transpose{#1}\else\musicnotefornext{{\scriptsize capo #1}}\fi%
}

% END textual notes

% BEGIN musical markings

% Outputs the Segno mark
\newcommand{\segno}{%
  \textnotefornext{\musSegno}%
}

% Outputs a textual note for "D.C. al fine"
\newcommand{\dacapo}{%
  \textnoteforprev{\emph{D.C. al fine}}%
}

% Outputs a textual note for "D.S. al fine"
\newcommand{\dalsegno}{%
  \textnoteforprev{\emph{D.S. al fine}}%
}

% END musical markings

% Save the original command; will be called.
\let\@SB@@@beginsongorig\SB@@@beginsong

% This rewrite of a command called always when a new song is started resets
% the verseglue state to false (no glueing), calls the original command, and
% adds the song to the basic TOC also (in addition to indices).
\renewcommand\SB@@@beginsong{%
  % Reset verseglue state:
  \global\@stanzasgluedfalse%
  % Call the original command:
  \@SB@@@beginsongorig%
  % Create the TOC line. Note that these belong to a group started in the
  % original command called above.
  \hypersetup{bookmarksdepth=0}%
  \phantomsection%
  \addcontentsline{toc}{subsection}{%
    \numberline{\thesongnum}%
    \songtitle\relax%
    \ifshowphintoc{% Show phase info if so desired
      \hspace{0.15em}\scriptsize\textsuperscript{\rmfamily\tiny\phaselist}}\fi%
    }%
  \hypersetup{bookmarksdepth=2}%
}


% The following rewrite adds only \color{mbarcolor} command to change the color of the measure bar
\renewcommand\SB@makembar[2]{%
  \ifSB@inverse\else%
    \ifSB@inchorus\else\SB@errmbar\fi%
  \fi%
  \ifhmode%
    \SB@skip\lastskip\unskip%
    \setbox\SB@box\lastbox%
    \copy\SB@box%
    \ifvbox\SB@box%
      \begingroup%
        \setbox\SB@boxii\copy\SB@box%
        \vbadness\@M\vfuzz\maxdimen%
        \setbox\SB@boxii%
          \vsplit\SB@boxii to\maxdimen%
      \endgroup%
      \long\edef\SB@temp{\splitfirstmark}%
      \ifx\SB@temp\SB@measuremark%
        \penalty100\hskip1em%
      \else%
        \penalty100\hskip\SB@skip%
      \fi%
    \else%
      \penalty100\hskip\SB@skip%
    \fi%
  \fi%
  \ifvmode\leavevmode\fi%
  \setbox\SB@box\hbox{{\meterfont\relax#1}}%
  \setbox\SB@boxii\hbox{{\meterfont\relax#2}}%
  \SB@dimen\wd\ifdim\wd\SB@box>\wd\SB@boxii\SB@box\else\SB@boxii\fi%
  \SB@dimenii\baselineskip%
  \advance\SB@dimenii-2\p@%
  \advance\SB@dimenii-\ht\SB@box%
  \advance\SB@dimenii-\dp\SB@box%
  \advance\SB@dimenii-\ht\SB@boxii%
  \advance\SB@dimenii-\dp\SB@boxii%
  \let\SB@temp\relax%
  \ifdim\SB@dimen>\z@%
    \advance\SB@dimenii-.75\p@%
    \def\SB@temp{\kern.75\p@}%
  \fi%
  \SB@maxmin\SB@dimen<{.5\p@}%
  \SB@maxmin\SB@dimenii<\z@%
  \vbox{%
    \mark{\SB@measuremark}%
    \hbox to\SB@dimen{%
      \hfil%
      \box\SB@box%
      \hfil%
    }%
    \nointerlineskip%
    \hbox to\SB@dimen{%
      \hfil%
      \box\SB@boxii%
      \hfil%
    }%
    \SB@temp%
    \nointerlineskip%
    \hbox to\SB@dimen{%
      \hfil%
      \color{mbarcolor}\vrule\@width.5\p@\@height\SB@dimenii%
      \hfil%
    }%
  }%
  \meter{}{}%
}
\let\SB@mbar\SB@makembar

% Align choruses and verses if verse numbers are not shown. To show verse
% numbers instead, set \showversenumberstrue in the main document preamble
% (after including this package).
\ifshowversenumbers%
\else%
  \noversenumbers%
  % We renew \@beginverseorig instead of \beginverse to not lose the changes
  % made to \beginverse above in the melody notes section for saving the
  % baseline adjustment.
  \renewcommand\@beginverseorig{%
    \begingroup%
      \SB@loadactives%
      \@ifstar{\endgroup\vnumberedfalse\SB@beginverse}% % keep this to consume the star
              {\endgroup\vnumberedfalse\SB@beginverse}% % this line was changed
  }
  \renewcommand\SB@cbarshift{%
    \ifdim\cbarwidth>\z@% % removed '\ifSB@inchorus' to shift in verses too
      \advance\leftskip\cbarwidth%
      \advance\leftskip5\p@\relax%
    \fi%
  }
\fi%

% The following rewrite shortens the vertical line displayed on the left side of choruses.
% This is done to accomodate using choruses as repeats with \glueverses. The \ifSB@chorustop
% blocks commented with 'added by larva' are added, and the \color macro with the surrounding
% block, too.
\newlength{\cbstartadj}% larva: will hold chorus line's top y coordinate adjustment value
\newlength{\cbendadj}% larva: will hold chorus line's bottom y coordinate adjustment value
\renewcommand\SB@chorusbar[1]{%
  \ifdim\cbarwidth>\z@%
    \SB@dimen\ht#1%
    \SB@dimenii\dp#1%
    \advance\SB@dimen%
      \ifSB@chorustop\ifchorded\else2\fi\fi\SB@dimenii%
    \ifSB@chorustop% added by larva
      \setlength{\cbstartadj}{.15em}%  top y, set value to push it down
      \setlength{\cbendadj}{-.8\SB@dimenii}% bottom y, set value to rise it by a factor of depth
      \addtolength{\SB@skip}{-\cbstartadj}% top y
      \addtolength{\SB@dimen}{-\cbstartadj}% fix bottom y to reflect top y adjustment
      \addtolength{\SB@dimen}{\cbendadj}% bottom y, adjust
    \fi%
    \SB@skip\SB@dimen\relax%
    \SB@computess\SB@skip1\@plus#1%
    \SB@computess\SB@skip{-1}\@minus#1%
    \nointerlineskip\null\nobreak%
    \ifSB@chorustop% added by larva
      \vskip\cbstartadj% top y, push line start down
    \fi%
    {\color{repetitionsigncolor}% % block and color addad by larva
      \leaders\vrule\@width\cbarwidth\vskip\SB@skip%
    }%
    \ifSB@chorustop\ifchorded\else%
      \advance\SB@skip-\SB@dimenii%
    \fi\fi%
    \ifSB@chorustop% added by larva
      \addtolength{\SB@skip}{\cbstartadj}% top y, reset \SB@skip to it's earliel value
    \fi%
    \nobreak\vskip-\SB@skip%
  \fi%
}

% Rewrite this to have the same behaviour in chorded and non-chorded books:
% insert stretchable glue to the bottom of each column. Without this change
% non-chorded books would increase line spacing to verse lines to fill a column.
\renewcommand\SB@chordsoff{%
  \chordedfalse\lyrictrue%
  \def\SB@bracket##1]{\ignorespaces}%
  \let\SB@rechord\relax%
  \let\SB@ch\SB@ch@off%
  \ifSB@measurespec%
    \ifmeasures\SB@measureson\else\SB@measuresoff\fi%
  \else%
    \SB@measuresoff%
  \fi%
  \ifSB@preamble\def\colbotglue{\z@\@plus.5\textheight}\fi% changed line
  \SB@setbaselineskip%
}


% Colorize the output of macros \lrep, \rrep and \rep
\let\@lreporig\lrep
\let\@rreporig\rrep
\let\@reporig\rep
\renewcommand{\lrep}{{\color{repetitionsigncolor}\@lreporig}}
\renewcommand{\rrep}{{\color{repetitionsigncolor}\@rreporig}}
\renewcommand{\rep}[1]{{\color{repetitionsigncolor}\@reporig{#1}}
}


% This rewrite is required for newer LaTeX distributions. Ubuntu 22.04 with
% lualatex 1.14 worked without this, but 23.04 with lualatex 1.15 requires
% this change. Note that the change is *not* backwards compatible.
% See: https://tex.stackexchange.com/questions/650106/recent-update-broke-songs-package
\renewcommand\SB@obeylines{%
  \let\obeyedline\SB@par%
  \obeylines%
  \let\@par\SB@@par%
}

\makeatother% let @ become something ...tooootally else!

% END DEFINITIONS AND REWRITES


% BEGIN CREATE INDICES

% songs: create indexes (these must be named exactly like this for compile
% script to work)
\newindex{titleidx}{idx_title}
\newauthorindex{authidx}{idx_auth}
\newscripindex{tagidx}{idx_tag}

% END CREATE INDICES


% *****************************************************************************
